// File: ./pages/admin/plans/new.js

import { useState } from 'react'
import { useRouter } from 'next/router'
import Layout from '../../../components/Layout'
import { supabase } from '../../../lib/supabaseClient'

export default function AdminPlansNewPage() {
  const router = useRouter()
  const [name, setName] = useState('')
  const [error, setError] = useState('')
  const [loading, setLoading] = useState(false)

  const handleSubmit = async (e) => {
    e.preventDefault()
    setError('')
    if (!name.trim()) {
      setError('Informe o nome do plano.')
      return
    }
    setLoading(true)

    const { error: insertErr } = await supabase
      .from('plans')
      .insert([{ name: name.trim() }])

    if (insertErr) {
      console.error(insertErr)
      setError('Não foi possível criar o plano.')
      setLoading(false)
    } else {
      router.push('/admin/plans')
    }
  }

  return (
    <Layout>
      <div className="admin-plans-new">
        <h1>Criar Novo Plano</h1>
        <form onSubmit={handleSubmit} className="form-plan">
          <label htmlFor="name">Nome do Plano:</label>
          <input
            id="name"
            type="text"
            value={name}
            onChange={(e) => setName(e.target.value)}
            required
          />

          {error && <p className="error">{error}</p>}

          <button type="submit" disabled={loading}>
            {loading ? 'Criando...' : 'Criar Plano'}
          </button>
        </form>
      </div>

      <style jsx>{`
        .admin-plans-new {
          max-width: 500px;
          margin: auto;
          padding: 2rem 1rem;
        }
        h1 {
          text-align: center;
          margin-bottom: 1.5rem;
        }
        .form-plan {
          display: flex;
          flex-direction: column;
          gap: 1rem;
        }
        label {
          font-weight: 600;
        }
        input {
          padding: 0.5rem;
          border: 1px solid #ccc;
          border-radius: 6px;
          font-size: 1rem;
        }
        .error {
          color: #c00;
          text-align: center;
        }
        button {
          background: #1976d2;
          color: #fff;
          padding: 0.75rem;
          border: none;
          border-radius: 6px;
          font-size: 1rem;
          cursor: pointer;
        }
        button:hover {
          background: #125ca1;
        }
        button:disabled {
          background: #aaa;
          cursor: not-allowed;
        }
      `}</style>
    </Layout>
  )
}
